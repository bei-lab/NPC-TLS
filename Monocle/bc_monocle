library(monocle3)
library(Seurat)
library(dplyr)

load("monocle3_bcr_all_raw_tumor.RData")

cds <- new_cell_data_set(expression_matrix,
                         cell_metadata = cell_metadata,
                         gene_metadata = gene_annotation)


cds <- preprocess_cds(cds, num_dim = 35)
cds <- align_cds(cds, alignment_group = "sample"
                 # ,residual_model_formula_str = "~ nCount_RNA + percent.mito"
)


cds <- reduce_dimension(cds,reduction_method = "UMAP",cores = 1,umap.fast_sgd = FALSE)

cds <- cluster_cells(cds)
cds <- learn_graph(cds)
library(ggsci)

cols = c("#FED439FF","#FD7446FF","#C80813FF","#FD8CC1FF",
         "#D2AF81FF","#D5E4A2FF","#7E6148FF","#91331FFF","#F39B7FFF"
         ,"#370335FF","#7F7F7FFF","#FF7F0EFF","#A20056FF","#D6D6CEFF","#1B1919FF"
)

aa <- pData(cds)$annotation  %>% unique  %>% sort()
pData(cds)$annotation <- factor(pData(cds)$annotation , levels = c(aa[-2],aa[2]))
pdf("monocle3_35_annotation.pdf",width=8,height=6)
plot_cells(cds,
           color_cells_by = "annotation",
           cell_size = 0.5,
           group_label_size = 3,
           label_groups_by_cluster=F,
           label_leaves=F,
           label_branch_points=F,
           label_cell_groups=F)
# +scale_color_manual(values = cols) 
dev.off()

get_earliest_principal_node <- function(cds, time_bin="B_C1_TCL1A"){
  cell_ids <- which(colData(cds)[, "annotation"] == time_bin)
  
  closest_vertex <-
    cds@principal_graph_aux[["UMAP"]]$pr_graph_cell_proj_closest_vertex
  closest_vertex <- as.matrix(closest_vertex[colnames(cds), ])
  root_pr_nodes <-
    igraph::V(principal_graph(cds)[["UMAP"]])$name[as.numeric(names
                                                              (which.max(table(closest_vertex[cell_ids,]))))]
  
  root_pr_nodes
}
cds <- order_cells(cds, root_pr_nodes=get_earliest_principal_node(cds))

png("monocle3_35_pseudotime.png",width=8,height=6,res = 400, units = "in")
plot_cells(cds,
           color_cells_by = "pseudotime",
           label_cell_groups=FALSE,
           label_leaves=FALSE,
           label_branch_points=FALSE,
           graph_label_size=3,
           cell_size = 0.5)
dev.off()
